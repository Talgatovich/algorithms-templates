""" 
Тимофей решил организовать соревнование по спортивному программированию,
чтобы найти талантливых стажёров. Задачи подобраны, участники зарегистрированы,
тесты написаны. Осталось придумать, как в конце соревнования будет определяться 
победитель.
Каждый участник имеет уникальный логин. Когда соревнование закончится,
к нему будут привязаны два показателя: количество решённых задач Pi
и размер штрафа Fi. Штраф начисляется за неудачные попытки и время, 
затраченное на задачу.

Тимофей решил сортировать таблицу результатов следующим образом: 
при сравнении двух участников выше будет идти тот, у которого решено больше
задач. При равенстве числа решённых задач первым идёт участник с меньшим 
штрафом. Если же и штрафы совпадают, то первым будет тот, 
у которого логин идёт раньше в алфавитном (лексикографическом) порядке. 
Формат ввода
В первой строке задано число участников n, 1 ≤ n ≤ 100 000.
В каждой из следующих n строк задана информация про одного из участников.
i-й участник описывается тремя параметрами:

уникальным логином (строкой из маленьких латинских букв длиной не более 20)
числом решённых задач Pi
штрафом Fi
Fi и Pi — целые числа, лежащие в диапазоне от 0 до 109.
Формат вывода
Для отсортированного списка участников выведите по порядку их логины по одному в строке.

"""


def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    start = 0
    end = len(arr) - 1
    left = 0
    right = len(arr) - 1
    m = (left + right) // 2
    pivot = arr[m]

    while left < right:

        while arr[left] < pivot:
            left += 1

        while arr[right] > pivot:
            right -= 1

        arr[left], arr[right] = arr[right], arr[left]
        # left += 1
        # right -= 1

        quick_sort(arr[start:left])
        quick_sort(arr[right:end])
    return arr


arr = [7, 5, 3, 10, 4, 8, 9, 11]
print(quick_sort(arr))
